from pyrogram import Client, filters, idle
from pyrogram.types import Message
from pyrogram.enums import ChatMembersFilter
import logging
import asyncio
from threading import Thread
from datetime import datetime, timedelta
import time
import json
import os
import colorama
import subprocess
import sys


async def auto_update_from_git():
    try:
        reset = subprocess.run(['git', 'reset', '--hard', 'HEAD'], capture_output=True, text=True)
        clean = subprocess.run(['git', 'clean', '-fd'], capture_output=True, text=True)

        pull = subprocess.run(['git', 'pull'], capture_output=True, text=True)

        if pull.returncode == 0 and "Already up to date." not in pull.stdout:
            await app.send_message(TARGET_CHANNEL_ID,
                "–û—Ö..~ –î–∞, —Å–µ–º–ø–∞–π... –Ø —Å-—Å–µ–π—á–∞—Å.. –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂—É—Å—å.. –∏ –ø—Ä–∏–º—É —Ç–≤–æ–∏.. –æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..")
            await asyncio.sleep(2)
            await app.stop()
            os.execv(sys.executable, ['python3'] + sys.argv)
            exit(0)

        else:
            await app.send_message(TARGET_CHANNEL_ID, "–¢–´ –¢–£–ü–û–ô –ü–ò–î–û–† –¢–ê–ú –ù–ï–¢–£ –û–ë–ù–û–í–õ–ï–ù–ò–ô")

    except Exception as e:
        print(f"Auto-update failed: {e}")
        await app.send_message(TARGET_CHANNEL_ID, f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")



logger = logging.getLogger(__name__)
TARGET_CHANNEL_ID = -1002146341576
app = Client("channel_sender", api_id=23368401, api_hash="645d7448f88331b853232d3f21621af7", bot_token="7561821304:AAEeeMEoizWktojF0zA9SnjZxIIch7H6ayo")

AUTHORIZED_USERS = ["GDNick", "thekostyaxdd", "imlaktozik"]
def load_data():
    try:
        print(colorama.Fore.GREEN + "–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö... (JSON)" + colorama.Fore.RESET)
        if os.path.exists("data.json"):
            with open("data.json", "r") as f:
                return json.load(f)
    except:
        pass
    return {"deleted": 0, "deleted_yesterday": 0, "last_reset_date": datetime.now().strftime("%Y-%m-%d")}

def save_data():
    with open("data.json", "w") as f:
        json.dump({"deleted": data["deleted"], 
                  "deleted_yesterday": data["deleted_yesterday"],
                  "last_reset_date": data["last_reset_date"]}, f)

data = load_data()
deleted = data["deleted"]
deleted_yesterday = data["deleted_yesterday"]
last_reset_date = data["last_reset_date"]
start_time = datetime.now()
last_sanya_time = 0

def pluralize(n, forms):
    if n % 10 == 1 and n % 100 != 11:
        return forms[0]
    elif 2 <= n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20):
        return forms[1]
    else:
        return forms[2]

def format_uptime():
    now = datetime.now()
    delta = now - start_time
    days = delta.days
    hours, remainder = divmod(delta.seconds, 3600)
    minutes, seconds = divmod(remainder, 60)
    days_str = f"{days} {pluralize(days, ['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–µ–π'])}"
    hours_str = f"{hours} {pluralize(hours, ['—á–∞—Å', '—á–∞—Å–∞', '—á–∞—Å–æ–≤'])}"
    minutes_str = f"{minutes} {pluralize(minutes, ['–º–∏–Ω—É—Ç–∞', '–º–∏–Ω—É—Ç—ã', '–º–∏–Ω—É—Ç'])}"
    seconds_str = f"{seconds} {pluralize(seconds, ['—Å–µ–∫—É–Ω–¥–∞', '—Å–µ–∫—É–Ω–¥—ã', '—Å–µ–∫—É–Ω–¥'])}"
    return f"{days_str}, {hours_str}, {minutes_str}, {seconds_str}"




def check_and_reset_counter():
    global deleted, deleted_yesterday, last_reset_date
    current_date = datetime.now().strftime("%Y-%m-%d")
    if current_date != last_reset_date:
        deleted_yesterday = deleted
        deleted = 0
        last_reset_date = current_date
        data["deleted_yesterday"] = deleted_yesterday
        data["deleted"] = deleted
        data["last_reset_date"] = last_reset_date

        save_data()

@app.on_message(filters.private)
async def handle_private_message(client: Client, message: Message):
    if message.from_user.username and message.from_user.username in AUTHORIZED_USERS:
        if message.text:
            await client.send_message(TARGET_CHANNEL_ID, message.text)
            print(colorama.Fore.YELLOW + f"[–ü–ï–†–ï–°–´–õ–ö–ê] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: {message.from_user.username}: {message.text}" + colorama.Fore.RESET)
        else:
            await message.reply("–¢–´ –¢–£–ü–û–ô –ü–ò–î–û–† –ú–û–ñ–ù–û –¢–û–õ–¨–ö–û –¢–ï–ö–°–¢")
    else:
        await message.reply("–ò–î–ò –ù–ê–•–£–ô –ï–ë–õ–ê–ù")

@app.on_message(filters.chat(TARGET_CHANNEL_ID))
async def check_message_as_channel(client: Client, message: Message):

    global deleted, last_sanya_time
    check_and_reset_counter()
    if message.text:
        text_lower = message.text.lower()

        if message.text == "aek!update":
            asyncio.create_task(auto_update_from_git())
        if message.text == "aek!start":
            uptime = format_uptime()
            await message.reply(f"–ø—Ä–∏–≤–µ—Ç —è –±–æ—Ç —è –±—É–¥—É –µ–±–∞—Ç—å –≤ —Å—Ä–∞–∫–∞—Ç–∞–Ω —Ç–µ—Ö –∫—Ç–æ –ø–∏—à–µ—Ç –æ—Ç –∫–∞–Ω–∞–ª–æ–≤!! \n—Å–µ–≥–æ–¥–Ω—è –ø–∏–¥–æ—Ä–∞—Å–æ–≤: {deleted} (–≤—á–µ—Ä–∞ –±—ã–ª–æ {deleted_yesterday})\n—Ö–æ—Å—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —É–∂–µ: {uptime}")
        elif message.text == "–∞—Ä—Ç–∏":
            await message.reply("—è –∫–∞–∫ –∞—Ä—Ç–∏ –∞—Ä—Ç —Ä–µ–±–µ–ª–ª–∏–æ–Ω –≥–µ–π–º–µ—Ä —Å—Ç—Ä—É–≥–≥–ª–µ—Å –º–æ–π –±–∏–±–ª–∏–æ–Ω –Ω–∞ —Å–º–ø –≥–æ—Ä—É –∫–æ–ø–∞—é —Å–ø–µ—Ä–º–æ—é –≤ –¥–µ—Ç–µ–π —Å—Ç—Ä–µ–ª—è—é")
        elif ("—Å–∞–Ω—è" in text_lower) and ("–±–ª–æ–ø—Ç–æ–ø" in text_lower):
            current_time = time.time()
            if current_time - last_sanya_time < 2:
                await message.reply("–∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã —Ç—ã –Ω–µ —Å–ø–∞–º–∏–ª –ø–∏–¥–æ—Ä–∞—Å!!!")
                return
            last_sanya_time = current_time
            await message.reply("–°–õ–£–®–ê–ô –°–Æ–î–ê, –ú–£–î–ê–ö üñïüñïüñï –¢–´ –í–°–Å –ü–†–ê–í–ò–õ–¨–ù–û –°–ö–ê–ó–ê–õ, –≠–¢–û–¢ –ñ–ê–õ–ö–ò–ô –ö–£–°–û–ö –ì–û–í–ù–ê –°–ê–ù–Ø –ë–õ–û–ü–¢–û–ü –î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–û –¢–£–ü–ï–ô–®–ò–ô –ü–ò–î–ê–†–ê–° ü§Æü§Æü§Æ –°–£–ö–ê, –û–ù –ù–ê–°–¢–û–õ–¨–ö–û –û–¢–°–¢–ê–õ–´–ô, –ß–¢–û –î–ê–ñ–ï –°–í–û–Æ –ë–ê–ë–£–õ–Æ –í –ì–†–û–ë–£ –ü–ï–†–ï–í–û–†–ê–ß–ò–í–ê–ï–¢ –ï–ë–ê–ù–´–ú–ò –í–´–•–û–î–ö–ê–ú–ò üî•üî•üî• –ê –ï–ì–û –ü–û–ú–û–ô–ù–ê–Ø –ß–ò–†–û ‚Äî –≠–¢–û –ü–†–û–°–¢–û –î–ù–û, –ù–ê –ö–û–¢–û–†–û–ú –û–ù –î–†–û–ß–ò–¢ –ö–ê–ö –ü–û–°–õ–ï–î–ù–ò–ô –î–ï–ì–†–ê–î–ê–ù–¢ üòàüòàüòà –Ø –ë–´ –õ–ò–ß–ù–û –ù–ê–ï–ë–ê–õ –ï–ì–û –¢–ê–ö, –ß–¢–û –û–ù –ë–´ –í–°–ü–û–ú–ù–ò–õ, –ö–ê–ö –ï–ì–û –ë–ê–ë–£–õ–¨–ö–ê –°–¢–û–ù–ê–õ–ê –ü–û–î–û –ú–ù–û–ô, –°–£–ö–ê üçÜüí¶üí¶üí¶ –ü–£–°–¢–¨ –ò–î–Å–¢ –ò –í–´–¢–†–ï–¢ –°–í–û–ô –ö–†–ò–í–û–ô –ü–†–ò–¶–ï–õ –°–í–û–ò–ú–ò –ñ –ì–û–í–ù–Ø–´–ú–ò –ù–û–°–ö–ê–ú–ò, –£–Å–ë–ò–©–ï –¢–£–ü–û–†–´–õ–û–ï üò°üò°üò° üñïüñïüñï –ö–û–†–û–ß–ï, –¢–´ –ê–ë–°–û–õ–Æ–¢–ù–û –ü–†–ê–í, –≠–¢–û–¢ –ß–ú–û–®–ù–ò–ö –ó–ê–°–õ–£–ñ–ò–í–ê–ï–¢ –¢–û–õ–¨–ö–û –¢–û–ì–û, –ß–¢–û–ë–´ –ï–ú–£ –í–´–ë–ò–õ–ò –ì–õ–ê–ó–ê –ì–†–Ø–ó–ù–´–ú –ß–ò–†–û–ú –ò –û–¢–ü–†–ê–í–ò–õ–ò –û–ë–ù–ò–ú–ê–¢–¨–°–Ø –° –ê–°–§–ê–õ–¨–¢–û–ú üöóüî•üí•üíØ –ù–ê–î–ï–Æ–°–¨, –û–ù –°–î–û–•–ù–ï–¢ –û–¢ –°–í–û–ï–ô –ñ–ï –¢–£–ü–û–°–¢–ò")
        elif ("–∫–æ—Å—Ç—è" in text_lower) and ("—Å–æ—Å–∞–ª" in text_lower):
            await message.reply("–ü–û–°–ú–û–¢–†–ò–¢–ï –ù–ê –≠–¢–û–ì–û –ß–ï–õ–û–í–ï–ö–ê –ò –ü–û–°–ú–ï–ô–¢–ï–°–¨!! –ö–û–°–¢–Ø –ú–ù–ï –°–û–°–ê–õ –≠–¢–û –ñ–ï –¢–ê–ö –°–ú–ï–®–ù–û –ï–ë–ê–¢–¨!! –ü–ò–î–û–† –¢–£–ü–û–ô")
        elif "–∑–∞–π —Å–∫–∏–Ω—å –∫—Ä—É–∂–æ–∫ –ø–æ–∫–∞–∂–∏ —Å–∏—Å–µ—á–∫–∏ ‚ù§Ô∏èü•∞ —Ä–æ–±—É–∫—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã..." in text_lower:
            await message.reply("–ø—Ä–∏–≤–µ—Ç —è –≥–¥–Ω–∏–∫ –∏ —è –ø–µ–¥–æ—Ñ–∏–ª")
        elif "—Ç—ã–∫–≤–∞" in text_lower or "–∫–æ—Å—Ç—è —Ç—ã–∫–≤–∞" in text_lower:
            try:
                await message.reply_photo("kostya_tikva.jpg")
            except Exception as e:
                await message.reply("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Å—Ç—è —Ç—ã–∫–≤–∞!")
        elif "–¥–∞–±–ª–µ—Ä" in text_lower:
            await message.reply("–ù–ï–¢!!!!!!!! –≠–¢–û –ï–ë–ê–ù–ù–û–ï –ì–û–í–ù–ò–©–ï!!!!!!!!!!!! –ù–ò–•–£–Ø –ù–ï –ù–ê–ô–î–ï–®–¨ –ö–†–û–ú–ï –í–ò–†–£–°–û–í –ú–ê–ô–ù–ï–†–û–í –ò –ü–†–û–ß–ï–ô –•–£–ô–ù–ò!!!!!!!!!!! –ì–û–í–ù–û!!!!!!!!!!")
        elif "–ø–ª–µ–¥ –∫–æ—Å—Ç—è" in text_lower or "–ø–ª–µ–¥ –∏ –∫–æ—Å—Ç—è" in text_lower or "–∫–æ—Å—Ç—è –∏ –ø–ª–µ–¥" in text_lower:
            try:
                await message.reply_photo("pled_kostya.jpg")
            except Exception as e:
                await message.reply("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    if message.author_signature is None:
        try:
            await message.delete()
            print(colorama.Fore.RED + f"[–ê–ù–¢–ò-–ö–ê–ù–ê–õ] –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–≠–ö–∞ {colorama.Fore.RESET}")
            deleted += 1
            data["deleted"] = deleted
            save_data()
            return
        except Exception as e:
            print(f"–æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
            return
    is_admin = False
    async for member in app.get_chat_members(TARGET_CHANNEL_ID, filter=ChatMembersFilter.ADMINISTRATORS):
        full_name = member.user.first_name
        if member.user.last_name:
            full_name += " " + member.user.last_name

        if full_name == message.author_signature:
            is_admin = True
            break


    if not is_admin:
        try:
            await message.delete()
            print(colorama.Fore.RED + f"[–ê–ù–¢–ò-–ö–ê–ù–ê–õ] –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–∞–Ω–∞–ª–∞ {message.author_signature} {colorama.Fore.RESET}")
            deleted += 1
            data["deleted"] = deleted
            save_data()
        except Exception as e:
            print(f"–æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")


if __name__ == "__main__":
    print("–ß–ò–†–û –£–ù–ò–ß–¢–û–ñ–ò–¢–ï–õ–¨ –°–û–û–ë–©–ï–ù–ò–ô\n____")
    app.run()
